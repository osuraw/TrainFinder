<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Desktop">

    <!--UserConrtol-->
    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="{StaticResource BackGroundVeryLightBrush}"/>
    </Style>

    <!--GroupBox-->
    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}"/>
        <!--<Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Bold"/>-->
    </Style>

    <!--button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource Medium}" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="{StaticResource ButtonBackGround1Brush}"/>
        <!--<Setter Property="local:IsBusyAttachedProperty.Value" Value="False" />-->

        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       TextWrapping="WrapWithOverflow"
                                       Visibility="{TemplateBinding local:IsBusyAttachedProperty.Value,Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <TextBlock 
                                Style="{StaticResource Spinning}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Visibility="{TemplateBinding local:IsBusyAttachedProperty.Value,Converter={local:BooleanToVisibilityConverter},ConverterParameter=True}"
                                />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ButtonBackGround2}" Duration="00:00:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ButtonBackGround1}" Duration="00:00:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <!--label-->
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontSize" Value="{StaticResource Medium}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="45"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackGroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextForGroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="FontSize" Value="{StaticResource Medium}"/>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Margin" Value="10"/>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="2" BorderBrush="{StaticResource ErrorBrush}">
                        <Grid>
                            <AdornedElementPlaceholder />
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="{StaticResource ErrorBrush}"
                                       VerticalAlignment="Center" HorizontalAlignment="Right" />
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <TextBlock
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}"
                            x:Name="PlaceHolder"
                            FontFamily="{StaticResource LetoThin}"
                            VerticalAlignment="Center"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Foreground="{StaticResource LogInScreenForeGroundBrush}">

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Text,RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--ComboBox-->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="FontSize" Value="{StaticResource Medium}"/>
    </Style>

    <!--DataGrid-->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
    </Style>

    
</ResourceDictionary>